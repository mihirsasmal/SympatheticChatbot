{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/servicehandler.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div style=\\\"text-align:center\\\" [style.display]=\\\"isDisplay? 'block': 'none'\\\">\\r\\n  <h1>\\r\\n    Jira Sprint Card Generator !!\\r\\n  </h1>\\r\\n</div>\\r\\n<div style=\\\"text-align:center\\\" [style.display]=\\\"isError? 'block': 'none'\\\" class=\\\"alert alert-danger\\\">\\r\\n  <h5>Error : {{error}}</h5>\\r\\n</div>\\r\\n<div class=\\\"row custom-row\\\" [style.display]=\\\"isDisplay? 'block': 'none'\\\">\\r\\n  <div class=\\\"col-sm-5 custom-container jumbotron\\\">\\r\\n\\r\\n    <form [formGroup]=\\\"loginForm\\\" (submit)=\\\"onSubmit()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"url\\\">Jira Url</label>\\r\\n        <div [ngClass]=\\\"{'alert alert-danger':loginForm.controls.url.invalid && loginForm.controls.url.dirty, 'has-success': !loginForm.controls.url.errors}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"url\\\" class=\\\"form-control\\\" formControlName=\\\"url\\\" />\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"(loginForm.controls.url.errors?.required && loginForm.controls.url.dirty)\\\">\\r\\n              Required\\r\\n            </li>\\r\\n            <li *ngIf=\\\"(loginForm.controls.url.errors?.pattern && loginForm.controls.url.dirty)\\\">\\r\\n              Url must start with http:// or https://\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"username\\\">Jira Username</label>\\r\\n        <div [ngClass]=\\\"{'alert alert-danger':(loginForm.controls.username.errors && loginForm.controls.username.dirty), 'has-success': !loginForm.controls.username.errors}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" formControlName=\\\"username\\\" />\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"(loginForm.controls.username.errors?.required && loginForm.controls.username.dirty)\\\">\\r\\n              Required\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"password\\\">Password</label>\\r\\n        <div [ngClass]=\\\"{'alert alert-danger':(loginForm.controls.password.errors && loginForm.controls.password.dirty), 'has-success': !loginForm.controls.password.errors}\\\">\\r\\n          <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" />\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"(loginForm.controls.password.errors?.required && loginForm.controls.password.dirty)\\\">\\r\\n              Required\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"jql\\\">Jira Query (JQL)</label>\\r\\n        <div [ngClass]=\\\"{'alert alert-danger':(loginForm.controls.jql.errors && loginForm.controls.jql.dirty), 'has-success': !loginForm.controls.jql.errors}\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"jql\\\" class=\\\"form-control\\\" formControlName=\\\"jql\\\" />\\r\\n          <ul class=\\\"help-block\\\">\\r\\n            <li *ngIf=\\\"(loginForm.controls.jql.errors?.required && loginForm.controls.jql.dirty)\\\">\\r\\n              Required\\r\\n            </li>\\r\\n          </ul>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <input [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\" value=\\\"submit\\\" class=\\\"btn btn-primary\\\" />\\r\\n    </form>\\r\\n\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row custom-row doNotPrint\\\" [style.display]=\\\"!isDisplay? 'block': 'none'\\\">\\r\\n  <div class=\\\"col-sm-5 custom-container jumbotron\\\">\\r\\n    <section style=\\\"text-align:center\\\">\\r\\n      <h3> Sprint Card Details</h3>\\r\\n    </section>\\r\\n    <form [formGroup]=\\\"listForm\\\" (submit)=\\\"onAdd()\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"addfield\\\" class=\\\"col-md-12\\\" style=\\\"float : left\\\">Add Story Field to Display in Card (Only if your field is not listed below)</label>\\r\\n        <input type=\\\"text\\\" name=\\\"addfield\\\" class=\\\"form-control col-md-10\\\" formControlName=\\\"addfield\\\" style=\\\"float : left\\\" placeholder=\\\"Enter the Json key as shown below like 'fields.summary'\\\"\\r\\n        />\\r\\n        <input [disabled]=\\\"!listForm.valid\\\" type=\\\"submit\\\" value=\\\"Add\\\" class=\\\"btn btn-primary col-md-2\\\" />\\r\\n      </div>\\r\\n    </form>\\r\\n    <h6> Below fields data will print in Card :</h6>\\r\\n    <ul>\\r\\n      <li *ngFor=\\\"let field of storyFields\\\">{{field}}</li>\\r\\n    </ul>\\r\\n    <!-- <dual-list  [source]=\\\"source\\\" [(destination)]=\\\"confirmed\\\"></dual-list> -->\\r\\n    <form [formGroup]=\\\"cardForm\\\" (submit)=\\\"onGenerate()\\\" (button)=\\\"onPreview()\\\">\\r\\n      <h5 style=\\\"text-align:left\\\"> Card Colors : </h5>\\r\\n      <div class=\\\"form-group col-sm-4\\\" style=\\\"float : left\\\">\\r\\n        <label for=\\\"userstoryColor\\\">User Story</label>\\r\\n        <img src=\\\"assets\\\\\\\\img\\\\\\\\UserStory.png\\\" width=\\\"10%\\\">\\r\\n        <input type=\\\"color\\\" name=\\\"userstoryColor\\\" class=\\\"form-control  col-md-3\\\" formControlName=\\\"userstoryColor\\\" style=\\\"height : 2.25rem;\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-sm-4\\\" style=\\\"float : left\\\">\\r\\n        <label for=\\\"subtaskColor\\\">SubTask</label>\\r\\n        <img src=\\\"assets\\\\\\\\img\\\\\\\\SubTask.png\\\" width=\\\"10%\\\">\\r\\n        <input type=\\\"color\\\" name=\\\"subtaskColor\\\" class=\\\"form-control col-md-3\\\" formControlName=\\\"subtaskColor\\\" style=\\\"height : 2.25rem;\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4\\\" style=\\\"float : left\\\">\\r\\n        <label for=\\\"defectColor\\\">Defect</label>\\r\\n        <img src=\\\"assets\\\\\\\\img\\\\\\\\Defect.png\\\" width=\\\"10%\\\">\\r\\n        <input type=\\\"color\\\" name=\\\"defectColor\\\" class=\\\"form-control col-md-3\\\" formControlName=\\\"defectColor\\\" style=\\\"height : 2.25rem;\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <!-- <input [disabled]=\\\"!cardForm.valid\\\" type=\\\"button\\\" value=\\\"Preview\\\" class=\\\"btn btn-info\\\" />  This will be enabled after providing user to resize the card. can be done by adding text box to enter and show the card in preview-->\\r\\n      <input [disabled]=\\\"!cardForm.valid\\\" type=\\\"submit\\\" value=\\\"Generate\\\" class=\\\"btn btn-primary\\\" />\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<div  class =\\\"doNotPrint\\\" [style.display]=\\\"isPrint? 'block': 'none'\\\">\\r\\n  <button class=\\\"btn btn-info\\\" (click) =\\\"onPrint()\\\" style=\\\"padding-left : 20px; padding-right: 20px; margin-left:20px; margin-bottom:5px;\\\">Print</button>\\r\\n</div>\\r\\n<div style=\\\"padding-left: 10px; float:left\\\" [style.display]=\\\"isPrint? 'block': 'none'\\\">\\r\\n  <div *ngFor=\\\"let issue of story?.issues;\\\" class=\\\"sprintCard\\\">\\r\\n    <div class=\\\"sprintCardDiv\\\" [style.background-color]=\\\"issue.fields.issuetype.name == 'Defect' ? defectColorValue : (issue.fields.issuetype.name == 'Sub-Task' || issue.fields.issuetype.name == 'Technical Task') ? subtaskColorValue: userstoryColorValue \\\">\\r\\n      <img class=\\\"sprintCardImg\\\" [src]=\\\"issue.fields.issuetype.name == 'Defect' ? 'assets\\\\\\\\img\\\\\\\\Defect.png': (issue.fields.issuetype.name == 'Sub-Task' || issue.fields.issuetype.name == 'Technical Task') ? 'assets\\\\\\\\img\\\\\\\\SubTask.png':'assets\\\\\\\\img\\\\\\\\UserStory.png'\\\">\\r\\n      <h1 class=\\\"sprintCardH1\\\">{{resolveFieldValue(issue,storyFields,0)}}</h1>\\r\\n      <h2 class=\\\"sprintCardH2\\\">{{resolveFieldValue(issue,storyFields,1)}}</h2>\\r\\n      <h3 *ngFor=\\\"let field of (storyFields ? storyFields.slice(2,length): []);\\\" class=\\\"sprintCardH3\\\">{{resolveFieldValueFromString(issue,field)}}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"@media print {\\n  .doNotPrint {\\n    display: none !important; }\\n  @page {\\n    size: auto; } }\\n\\n.sprintCard {\\n  width: 350px;\\n  height: auto;\\n  padding-right: 10px;\\n  padding-left: 10px;\\n  float: left; }\\n\\n.sprintCardDiv {\\n  display: block;\\n  float: left;\\n  height: 200px;\\n  width: 350px;\\n  border: 1px solid black;\\n  padding-left: 1em;\\n  padding-right: 10px;\\n  position: relative;\\n  word-wrap: break-word;\\n  page-break-inside: avoid;\\n  margin-right: 10px; }\\n\\n.sprintCardImg {\\n  background-color: white;\\n  margin-right: 7px;\\n  position: relative;\\n  top: 0;\\n  left: 0;\\n  width: 10%; }\\n\\n.sprintCardH1 {\\n  color: black;\\n  font-family: 'Russo One', sans-serif;\\n  font-size: 18pt;\\n  font-weight: bold;\\n  margin-bottom: 0;\\n  margin-top: 0;\\n  top: 0;\\n  margin-right: 10px;\\n  float: right; }\\n\\n.sprintCardH2 {\\n  color: black;\\n  height: 100px;\\n  width: 300px;\\n  font-family: 'Nunito', sans-serif;\\n  font-size: 15pt;\\n  margin-top: 0px;\\n  margin-right: 1px;\\n  overflow: hidden;\\n  white-space: pre-wrap;\\n  word-wrap: break-word;\\n  overflow-wrap: break-word;\\n  text-overflow: ellipsis;\\n  float: left; }\\n\\n.sprintCardH3 {\\n  color: black;\\n  border: 1.2px solid black;\\n  font-family: 'Russo One', sans-serif;\\n  font-size: 15pt;\\n  line-height: 1;\\n  bottom: 0;\\n  left: 0;\\n  position: absolute;\\n  margin-bottom: 0px;\\n  float: left; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","\r\nimport { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Injectable, ViewEncapsulation } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { ServiceHandler } from './servicehandler';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n\r\n  loginForm: FormGroup\r\n  listForm:FormGroup\r\n  cardForm:FormGroup\r\n  public story;\r\n  public isDisplay = true;\r\n  public isError = false;\r\n  public isPrint=false;\r\n  public error: string;\r\n  public storyFields = [\"key\",\"fields.summary\",\"fields.customfield_10232\"];\r\n  public userstoryColorValue;subtaskColorValue;defectColorValue;\r\n\r\n  public resolveFieldValue(issue, sourceArray, position){\r\n    var data = sourceArray[position] as string;\r\n   return this.resolveFieldValueFromString(issue,data);    \r\n  }\r\n\r\n  public resolveFieldValueFromString(issue,sourceString)\r\n  {\r\n    var dataarray = sourceString.split('.');\r\n    var returnValue = issue;\r\n    var i;\r\n    for (i=0;i < dataarray.length; i++ )\r\n    { returnValue= returnValue[dataarray[i]]}\r\n    return returnValue;\r\n  }\r\n  constructor(private _serviceHandler: ServiceHandler, private formBuilder: FormBuilder) {\r\n    this.createForm();\r\n    this.createListForm();\r\n    this.createCardForm();\r\n  }\r\n\r\n  onPrint()\r\n  {\r\n    window.print();\r\n  }\r\n  onSubmit() {\r\n    this.isDisplay = false;\r\n    this.isError = false;\r\n    this._serviceHandler.username = this.loginForm.controls.username.value;\r\n    this._serviceHandler.password = this.loginForm.controls.password.value;\r\n\r\n    this._serviceHandler.searchJql(this.loginForm.controls.url.value, this.loginForm.controls.jql.value).subscribe(\r\n      data => { this.story = data ; },\r\n      err => {\r\n        this.errorMessage(err);\r\n      }\r\n    );\r\n    \r\n  }\r\nonAdd(){\r\n  this.storyFields.push(this.listForm.controls.addfield.value);\r\n  this.listForm.reset();\r\n}\r\nonGenerate(){\r\n  this.userstoryColorValue = this.cardForm.controls.userstoryColor.value;\r\n  this.subtaskColorValue = this.cardForm.controls.subtaskColor.value;\r\n  this.defectColorValue = this.cardForm.controls.defectColor.value;\r\n this.isPrint=true;\r\n}\r\n  ngOnInit() {\r\n  }\r\n  createForm() {\r\n    this.loginForm = this.formBuilder.group({\r\n      url: ['', Validators.compose([\r\n        Validators.required, Validators.pattern(\"^(https?:\\/\\/).*\")\r\n      ])],\r\n      username: ['', Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      password: ['', Validators.compose([\r\n        Validators.required\r\n      ])],\r\n      jql: ['', Validators.compose([\r\n        Validators.required\r\n      ])]\r\n    })\r\n  }\r\n\r\n  createListForm() {\r\n    this.listForm = this.formBuilder.group({\r\n      addfield: ['',{}]\r\n    })\r\n  }\r\n\r\n  createCardForm() {\r\n    this.cardForm = this.formBuilder.group({\r\n      userstoryColor: ['#20ECF0',{}],\r\n      subtaskColor: ['#17C65D',{}],\r\n      defectColor: ['#DA2433',{}]\r\n    })\r\n  }\r\n  private errorMessage(err: any) {\r\n    this.error = err.message as string;\r\n    this.isDisplay = true;\r\n    this.isError = true;\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {ServiceHandler} from './servicehandler';\r\nimport { AngularDualListBoxModule } from 'angular-dual-listbox';\r\n\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,HttpClientModule,\r\n    FormsModule,ReactiveFormsModule,\r\n    CommonModule,\r\n    AngularDualListBoxModule\r\n  ],\r\n  providers: [ServiceHandler],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nconst jiraRestEndPoint = \"/jira/rest/api/2/\";\r\n@Injectable()\r\nexport class ServiceHandler {\r\n\r\n    public username: string; password: string;\r\n    constructor(private http: HttpClient) { }\r\n    public httpOptions;\r\n\r\n    searchJql(url: string, jql: string) {\r\n        this.httpOptions = {\r\n            headers: new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': 'Basic ' + btoa(this.username + ':' + this.password), 'X-Atlassian-Token': 'no-check'})\r\n        };        \r\n               \r\n        let jqlendpoint = \"/proxy/?url=\"+ url + jiraRestEndPoint + \"search?jql=\" + jql;\r\n\r\n        return this.http.get(jqlendpoint, this.httpOptions);\r\n\r\n    }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/servicehandler.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}